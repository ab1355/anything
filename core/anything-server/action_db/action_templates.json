[{
  "type": "action", 
  "featured": false, 
  "action_template_definition": 
  {
    "anything_action_version": "0.1.0",
    "type": "action",
    "plugin_id": "http",
    "action_id": "http",
    "plugin_version": "0.1.0",
    "label": "Call API",
    "description": "Call any API",
    "icon": "<svg fill=\"#000000\" width=\"800px\" height=\"800px\" viewBox=\"0 0 32 32\" id=\"icon\" xmlns=\"http://www.w3.org/2000/svg\"><defs><style>.cls-1{fill:none;}</style></defs><title>HTTP</title><path d=\"M30,11H25V21h2V18h3a2.0027,2.0027,0,0,0,2-2V13A2.0023,2.0023,0,0,0,30,11Zm-3,5V13h3l.001,3Z\" transform=\"translate(0 0)\"/><polygon points=\"10 13 12 13 12 21 14 21 14 13 16 13 16 11 10 11 10 13\"/><polygon points=\"23 11 17 11 17 13 19 13 19 21 21 21 21 13 23 13 23 11\"/><polygon points=\"6 11 6 15 3 15 3 11 1 11 1 21 3 21 3 17 6 17 6 21 8 21 8 11 6 11\"/><rect id=\"_Transparent_Rectangle_\" data-name=\"&lt;Transparent Rectangle&gt;\" class=\"cls-1\" width=\"32\" height=\"32\"/></svg>",
    "variables": {},
    "variables_locked": false,
    "variables_schema": {},
    "variables_schema_locked": false,
    "input": {
      "method": "GET",
      "url": "",
      "headers": "",
      "body": "" 
    },
    "input_locked": false,
    "input_schema": {
      "type": "object",
      "properties": {
        "method": {
           "title": "Method",
            "description": "HTTP Method for request",
            "type": "string",
            "oneOf": [
              {
                "value": "GET",
                "title": "GET"
              },
              {
                "value": "POST",
                "title": "POST"
              },
              {
                "value": "PUT",
                "title": "PUT"
              },
              {
                "value": "DELETE",
                "title": "DELETE"
              },
              {
                "value": "HEAD",
                "title": "HEAD"
              },
              {
                "value": "OPTIONS",
                "title": "OPTIONS"
              },
              {
                "value": "PATCH",
                "title": "PATCH"
              }
            ],
            "x-jsf-presentation": {
              "inputType": "select"
            }
        },
        "url": {
           "title": "URL",
          "description": "URL for request",
          "type": "string"
        },
        "headers": {
          "title": "Headers",
          "description": "Headers for request",
          "type": "string"
        },
        "body": {
          "title": "Body",
          "description": "Body for request",
          "type": "string"
        }
      },
      "x-jsf-order": ["url", "method", "headers", "body"],
      "required": ["method", "url"],
      "additionalProperties": false
    },
    "input_schema_locked": true,
    "presentation": {
      "position": {
        "x": 300,
        "y": 100
      }
    },
    "handles": [
      {
        "id": "a", 
        "type": "target",
        "position": "top"
      },
      {
        "id": "b",
        "type": "source",
        "position": "bottom"
      }
    ]
  }}
  ,{
    "type": "trigger",
    "featured": false,
    "action_template_definition": {
      "anything_action_version": "0.1.0",
      "type": "trigger", 
      "plugin_id": "cron",
      "action_id": "cron",
      "plugin_version": "0.1.0",
      "label": "Schedule Trigger",
      "description": "Run workflow on a schedule",
      "icon": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-clock\"><circle cx=\"12\" cy=\"12\" r=\"10\"/><polyline points=\"12 6 12 12 16 14\"/></svg>",
      "variables": {
        "cron_expression": "0 0 * * * *"
      },
      "variables_locked": false,
      "variables_schema": {
        "type": "object",
        "properties": {
          "cron_expression": {
            "title": "Cron Expression",
            "description": "When to run the trigger",
            "type": "string"
          }
        },
        "x-jsf-order": ["cron_expression"],
        "required": ["cron_expression"],
        "additionalProperties": false
      },
      "variables_schema_locked": true,
      "input": {
        "cron_expression": "{{variables.cron_expression}}"
      },
      "input_locked": true,
      "input_schema": {
        "type": "object",
        "properties": {
          "cron_expression": {
            "title": "Cron Expression",
            "description": "When to run the trigger",
            "type": "string"
          }
        },
        "x-jsf-order": ["cron_expression"],
        "required": ["cron_expression"],
        "additionalProperties": false
      },
      "input_schema_locked": true,
      "presentation": {
        "position": {
          "x": 300,
          "y": 100
        }
      },
      "handles": [
        {
          "id": "b",
          "type": "source",
          "position": "bottom"
        }
      ]
    }
  },
    {
      "type": "trigger",
      "featured": false,
      "action_template_definition": {
        "anything_action_version": "0.1.0",
        "type": "trigger",
        "plugin_id": "webhook",
        "action_id": "webhook",
        "plugin_version": "0.1.0",
        "label": "Webhook Trigger",
        "description": "Catch Requests from 3rd party system",
        "icon": "<svg width=\"800px\" height=\"800px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.52 3.046a3 3 0 0 0-2.13 5.486 1 1 0 0 1 .306 1.38l-3.922 6.163a2 2 0 1 1-1.688-1.073l3.44-5.405a5 5 0 1 1 8.398-2.728 1 1 0 1 1-1.97-.348 3 3 0 0 0-2.433-3.475zM10 6a2 2 0 1 1 3.774.925l3.44 5.405a5 5 0 1 1-1.427 8.5 1 1 0 0 1 1.285-1.532 3 3 0 1 0 .317-4.83 1 1 0 0 1-1.38-.307l-3.923-6.163A2 2 0 0 1 10 6zm-5.428 6.9a1 1 0 0 1-.598 1.281A3 3 0 1 0 8.001 17a1 1 0 0 1 1-1h8.266a2 2 0 1 1 0 2H9.9a5 5 0 1 1-6.61-5.698 1 1 0 0 1 1.282.597Z\" fill=\"#000000\"/></svg>",
        "variables": {
          "request_method": "POST",
          "security_model": "none",
          "username": "",
          "password": "",
          "custom_header_name": "",
          "custom_header_value": ""
        },
        "variables_locked": false,
        "variables_schema": {
          "type": "object",
          "properties": {
            "request_method": {
              "title": "Request Method",
              "description": "HTTP Method for request",
              "type": "string",
              "oneOf": [
                {
                  "value": "ANY",
                  "title": "ANY"
                },
                {
                  "value": "GET",
                  "title": "GET"
                },
                {
                  "value": "POST",
                  "title": "POST"
                },
                {
                  "value": "PUT",
                  "title": "PUT"
                },
                {
                  "value": "DELETE",
                  "title": "DELETE"
                },
                {
                  "value": "HEAD",
                  "title": "HEAD"
                },
                {
                  "value": "OPTIONS",
                  "title": "OPTIONS"
                },
                {
                  "value": "PATCH",
                  "title": "PATCH"
                }
              ],
              "x-jsf-presentation": {
                "inputType": "select"
              }
          }, 
            "security_model": {
              "title": "Security Model", 
              "description": "Select the security model for the webhook",
              "type": "string",
              "oneOf": [
                {
                  "const": "none",
                  "title": "None"
                },
                {
                  "const": "basic_auth", 
                  "title": "Basic Auth"
                },
                {
                  "const": "api_key",
                  "title": "API Key"
                },
                {
                  "const": "custom_header",
                  "title": "Custom Header"
                }
              ],
              "default": "none",
              "x-jsf-presentation": {
                "inputType": "select"
              }
            },
            "username": {
              "title": "Username",
              "description": "Username for Basic Authentication",
              "type": "string",
              "x-jsf-presentation": {
                "inputType": "text"
              }
            },
            "password": {
              "title": "Password",
              "description": "Password for Basic Authentication",
              "type": "string",
              "x-jsf-presentation": {
                "inputType": "text"
              }
            },
            "custom_header_name": {
              "title": "Custom Header Name",
              "description": "Name of the custom header",
              "type": "string",
              "x-jsf-presentation": {
                "inputType": "text"
              }
            },
            "custom_header_value": {
              "title": "Custom Header Value",
              "description": "Value of the custom header",
              "type": "string",
              "x-jsf-presentation": {
                "inputType": "text"
              }
            }
          },
          "required": ["request_method", "security_model"],
          "allOf": [
            {
              "if": {
                "properties": {
                  "security_model": {
                    "const": "basic_auth"
                  }
                },
                "required": ["request_method", "security_model"]
              },
              "then": {
                "required": ["username", "password"]
              },
              "else": {
                "properties": {
                  "username": "",
                  "password": ""
                }
              }
            },
            {
              "if": {
                "properties": {
                  "security_model": {
                    "const": "custom_header"
                  }
                },
                "required": ["request_method", "security_model"]
              },
              "then": {
                "required": ["custom_header_name", "custom_header_value"]
              },
              "else": {
                "properties": {
                  "custom_header_name": "",
                  "custom_header_value": ""
                }
              }
            }
          ],
          "x-jsf-order": [
            "request_method",
            "security_model",
            "username",
            "password",
            "api_key",
            "custom_header_name",
            "custom_header_value"
          ]
        },
        "variables_schema_locked": true,
        "input": {
          "request_method": "{{variables.request_method}}",
          "security_model": "{{variables.security_model}}",
          "username": "{{variables.username}}",
          "password": "{{variables.password}}",
          "custom_header_name": "{{variables.custom_header_name}}",
          "custom_header_value": "{{variables.custom_header_value}}"
        },
        "input_locked": true,
        "input_schema": {
          "type": "object",
          "properties": {
            "request_method": {
              "title": "Request Method",
              "description": "HTTP Method for request",
              "type": "string"
            },
            "security_model": {
              "title": "Security Model",
              "description": "Select the security model for the webhook",
              "type": "string"
            },
            "username": {
              "title": "Username",
              "description": "Username for Basic Authentication",
              "type": "string"
            },
            "password": {
              "title": "Password",
              "description": "Password for Basic Authentication",
              "type": "string"
            },
            "custom_header_name": {
              "title": "Custom Header Name",
              "description": "Name of the custom header",
              "type": "string"
            },
            "custom_header_value": {
              "title": "Custom Header Value",
              "description": "Value of the custom header",
              "type": "string"
            }
          },
          "x-jsf-order": [
            "request_method",
            "security_model",
            "username",
            "password",
            "custom_header_name",
            "custom_header_value"
          ],
          "required": ["request_method", "security_model"]
        },
        "input_schema_locked": true,
        "presentation": {
          "position": {
            "x": 300,
            "y": 100
          }
        },
        "handles": [
          {
            "id": "b",
            "type": "source",
            "position": "bottom"
          }
        ]
      }
    },
  {
    "type": "response",
    "featured": false,
    "action_template_definition": {
      "anything_action_version": "0.1.0", 
      "type": "response",
      "plugin_id": "response",
      "action_id": "response",
      "plugin_version": "0.1.0",
      "label": "Webhook Response",
      "description": "Send HTTP response with custom status code, headers and body",
      "icon": "<svg fill=\"#000000\" width=\"800px\" height=\"800px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10.53 5.03a.75.75 0 10-1.06-1.06l-6.25 6.25a.75.75 0 000 1.06l6.25 6.25a.75.75 0 101.06-1.06L5.56 11.5H17a3.248 3.248 0 013.25 3.248v4.502a.75.75 0 001.5 0v-4.502A4.748 4.748 0 0017 10H5.56l4.97-4.97z\"/></svg>",
      "variables": {
        "status_code": "200",
        "content_type": "application/json",
        "body": "{}"
      },
      "variables_locked": false,
      "variables_schema": {
        "type": "object",
        "properties": {
          "status_code": {
            "title": "Status Code",
            "description": "HTTP status code for the response",
            "type": "string",
            "oneOf": [ 
              {"value": "200", "title": "200 - OK"},
              {"value": "201", "title": "201 - Created"},
              {"value": "202", "title": "202 - Accepted"},
              {"value": "204", "title": "204 - No Content"},
              {"value": "400", "title": "400 - Bad Request"},
              {"value": "401", "title": "401 - Unauthorized"},
              {"value": "403", "title": "403 - Forbidden"},
              {"value": "404", "title": "404 - Not Found"},
              {"value": "500", "title": "500 - Internal Server Error"},
              {"value": "503", "title": "503 - Service Unavailable"}
            ],
            "x-jsf-presentation": {
              "inputType": "select"
            }
          },
          "content_type": {
            "title": "Content Type",
            "description": "Content type of the response",
            "type": "string",
            "oneOf": [
              {"value": "application/json", "title": "JSON"},
              {"value": "text/plain", "title": "Plain Text"},
              {"value": "text/html", "title": "HTML"},
              {"value": "text/xml", "title": "XML"},
              {"value": "application/x-www-form-urlencoded", "title": "Form URL Encoded"}
            ],
            "x-jsf-presentation": {
              "inputType": "select"
            }
          },
          "body": {
            "title": "Response Body",
            "description": "Content to send in response body",
            "type": "string",
            "x-jsf-presentation": {
              "inputType": "text"
            }
          }
        },
        "required": ["status_code", "content_type"],
        "x-jsf-order": ["status_code", "content_type", "body"]
      },
      "variables_schema_locked": true,
      "input": {
        "status_code": "{{variables.status_code}}",
        "content_type": "{{variables.content_type}}",
        "body": "{{variables.body}}"
      },
      "input_locked": true,
      "input_schema": {
        "type": "object",
        "properties": {
          "status_code": {
            "title": "Status Code",
            "description": "HTTP status code for the response",
            "type": "string"
          },
          "content_type": {
            "title": "Content Type",
            "description": "Content type of the response",
            "type": "string"
          },
          "body": {
            "title": "Response Body", 
            "description": "Content to send in response body",
            "type": "string"
          }
        },
        "required": ["status_code", "content_type"],
        "x-jsf-order": ["status_code", "content_type", "body"]
      },
      "input_schema_locked": true,
      "presentation": {
        "position": {
          "x": 300,
          "y": 100
        }
      },
      "handles": [
        {
          "id": "a",
          "type": "target",
          "position": "top"
        }
      ]
    }
  }
  ]