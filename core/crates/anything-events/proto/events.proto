syntax = "proto3";
package events;

service Events {
    // Send an event
    rpc TriggerEvent(TriggerEventRequest) returns (TriggerEventResponse);

    // Get an event
    rpc GetEvent(GetEventRequest) returns (GetEventResponse);

    // Post update
    // rpc PostExecutionUpdate(PostExecutionUpdateRequest) returns (PostExecutionUpdateResponse);

    // Register flow for execution
    // rpc SubscribeFlow(SubscribeFlowRequest) returns (stream SubscribeFlowResponse);
}


message Event {
    string id = 1;
    // Source of the event
    oneof source {
        string flow_id = 2;
        string trigger_id = 3;
    };
    string context = 4;
    string name = 5;
    optional int64 started_at = 6;
    optional int64 ended_at = 7;
}

message CreateEvent {
    string event_name = 1;
    string payload = 2;
    optional string metadata = 3;
    string trigger_id = 4;
}

message TriggerEventRequest {
    CreateEvent event = 1;
}
message TriggerEventResponse {
    string status = 1;
    string trigger_id = 2;
}

message GetEventRequest {
    string event_id = 1;
}

message GetEventResponse {
    Event event = 1;
}