[package]
name = "anything"
version = "0.0.0"
description = "A local app to do anything"
authors = ["Carl Lippert", "Ari Lerner"]
license = ""
repository = "https://github.com/tryanything-ai/anything"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[build-dependencies]
tauri-build = { version = "1.5", features = [] }

[dependencies]
anything-common = { path = "../../../core/crates/common" }
anything-coordinator = { path = "../../../core/crates/coordinator" }
anything-runtime = { path = "../../../core/crates/runtime" }
anything-graph = { path = "../../../core/crates/graph" }
tauri-plugin-anything-tauri = { path = "../../../core/crates/tauri-plugin-anything-tauri" }

tauri = { version = "1.5", features = [
    "fs-all",
    "os-all",
    "path-all",
    "shell-open",
] }
tonic = "0.10.0"

serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
tauri-plugin-fs-watch = { git = "https://github.com/tauri-apps/plugins-workspace", branch = "v1" }
tauri-plugin-deep-link = { git = "https://github.com/FabianLars/tauri-plugin-deep-link" }
toml = "0.5"
dirs = "5.0"
sqlx = { version = "0.7", features = [
    "runtime-tokio",
    "tls-rustls",
] } #trying this for sql2.rs
# sqlx = { version = "0.7", features = ["runtime-tokio-rustls", "json", "time"] } #for use in db also
tokio = { version = "1", features = ["full"] } #for use in db also
futures-core = "0.3"
time = "0.3"                                   # for parsing sql
thiserror = "1.0"                              # for sql plugin adopted from tauri example
lazy_static = "1.4.0"
# llm = "0.1.1"
anyhow = "1.0.71"
flume = "0.10.14"
tracing = "0.1.37"
tracing-subscriber = { version = "0.3.17", features = [
    "json",
    "fmt",
    "env-filter",
] }
tracing-appender = "0.2.2"
bytesize = { version = "1.1.0", features = ["serde"] }
reqwest = { version = "0.11.17", features = ["stream"] }
futures-util = "0.3.28"
rand = "0.8"
uuid = "1.4.1"
chrono = "0.4.26"

llm = { git = "https://github.com/rustformers/llm", branch = "main", features = [
    "metal",
] } #remove this when llm is published
sentry-tauri = "0.2.0"
dotenv = "0.15.0"

# inspiration for all rustformers cargo packages https://github.com/clarkmcc/chitchat/blob/main/src-tauri/Cargo.toml
# [target.'cfg(target_os = "macos")'.dependencies]
# llm = { git = "https://github.com/rustformers/llm", branch = "main", features= ["metal"] }
# [target.'cfg(target_os = "macos")'.dependencies]
# llm = { git = "https://github.com/rustformers/llm", features = ["models"] }
# cocoa = "0.24.1"
# llm-base = { git = "https://github.com/rustformers/llm/tree/main/crates/llm-base", branch = "main" }
# llm = { git = "https://github.com/rustformers/llm", rev = "bdd9c7d7c2ccaf61d392ab1e5feb312302aa8ff5", features = ["metal"] }
# cocoa = "0.24.1"
# llm = { git= "https://github.com/carllippert/llm-base-fix"}
# TODO: Figure out how to get CUDA working on Linux without ruining CUDA-less testing
# [target.'cfg(target_os = "windows")'.dependencies]
# llm = { git = "https://github.com/rustformers/llm", branch = "main", features = ["cublas"] }

# [target.'cfg(all(not(target_os = "macos"), not(target_os = "windows")))'.dependencies]
# llm = { git = "https://github.com/rustformers/llm", branch = "main", features = [] }


[features]
# this feature is used for production builds or when `devPath` points to the filesystem
# DO NOT REMOVE!!
custom-protocol = ["tauri/custom-protocol"]

[dependencies.tauri-plugin-sql]
git = "https://github.com/tauri-apps/plugins-workspace"
branch = "v1"
features = ["sqlite"]                                   # or "postgres", or "mysql"
